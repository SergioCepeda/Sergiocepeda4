{"ast":null,"code":"const initialState = {\n  recipes: [] // allRecipes: [],\n  // diets: [],\n  // detail: []\n\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_RECIPES':\n      return { ...state,\n        recipes: action.payload,\n        Recipes: action.payload\n      };\n\n    /* case 'GET_NAME_RECIPES':\r\n         return {\r\n             ...state,\r\n             recipes: action.payload\r\n         }\r\n     case 'FILTER_BY_DIET':\r\n         const allRecipes = state.allRecipes\r\n         const dietsAPI = []\r\n         const dietsDB = []\r\n         allRecipes.forEach(e => {\r\n             if (e.hasOwnProperty('diets') && e.diets.includes(action.payload)) {\r\n                 dietsAPI.push(e)\r\n             }\r\n         })\r\n           allRecipes.forEach(e => {\r\n             if (e.hasOwnProperty('diets') && e.diets.find(c => c.name === action.payload)) {\r\n                 dietsDB.push(e)\r\n             }\r\n         })\r\n         const find = dietsAPI.concat(dietsDB)\r\n         if (find.length) {\r\n             return {\r\n                 ...state,\r\n                 recipes: find\r\n             }\r\n         };\r\n         break;\r\n       case 'POST_RECIPE':\r\n         return {\r\n             ...state\r\n         }\r\n     // case 'GET_RECIPES':\r\n     //     return {\r\n     //         ...state,\r\n     //         recipes: action.payload\r\n     //     }\r\n     case 'FILTER_CREATED':\r\n         const createdFilter = action.payload === 'created' ? state.allRecipes.filter(el => el.createdInDB) : state.allRecipes.filter(el => !el.createdInDB)\r\n         return {\r\n             ...state,\r\n             recipes: action.payload === 'all' ? state.allRecipes : createdFilter\r\n         }\r\n     case \"GET_DETAIL\":\r\n         return {\r\n             ...state,\r\n             detail: action.payload,\r\n         }\r\n     case \"GET_RECIPE_TYPE\":\r\n         return {\r\n             ...state,\r\n             recipeTypes: action.payload,\r\n         }\r\n     case 'ORDER_BY_SCORE':\r\n         let sortedArr = action.payload === 'UP' ? state.recipes.sort(function (a, b) {\r\n             if (a.score > b.score) {\r\n                 return 1\r\n             }\r\n             if (b.score > a.score) {\r\n                 return -1\r\n             }\r\n             return 0\r\n         }) :\r\n             state.recipes.sort(function (a, b) {\r\n                 if (a.score > b.score) {\r\n                     return -1\r\n                 }\r\n                 if (b.score > a.score) {\r\n                     return 1\r\n                 }\r\n                 return 0\r\n             })\r\n         return {\r\n             ...state,\r\n             recipes: sortedArr\r\n         }\r\n     case 'FILTER_BY_ALPHA':\r\n         let alphaArr = action.payload === 'A-Z' ? state.allRecipes.sort(function (a, b) {\r\n             if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                 return 1;\r\n             };\r\n             if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                 return -1;\r\n             };\r\n             return 0;\r\n         }) :\r\n             state.allRecipes.sort(function (a, b) {\r\n                 if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                     return -1;\r\n                 };\r\n                 if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                     return 1;\r\n                 };\r\n                 return 0;\r\n             });\r\n         return {\r\n             ...state,\r\n             recipes: alphaArr\r\n         }*/\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/lacri/OneDrive/Desktop/food/PI-food-main/PI-food-main/PI-Food-main/client/src/reducer/index.js"],"names":["initialState","recipes","rootReducer","state","action","type","payload","Recipes"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ,CAEjB;AACA;AACA;;AAJiB,CAArB;;AAOA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAFb;AAGHC,QAAAA,OAAO,EAAEH,MAAM,CAACE;AAHbaAAOH,KAAP;AA7GR;AA+GH;;AAED,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    recipes: [],\r\n    // allRecipes: [],\r\n    // diets: [],\r\n    // detail: []\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'GET_RECIPES':\r\n            return {\r\n                ...state,\r\n                recipes: action.payload,\r\n                Recipes: action.payload\r\n            }\r\n       /* case 'GET_NAME_RECIPES':\r\n            return {\r\n                ...state,\r\n                recipes: action.payload\r\n            }\r\n        case 'FILTER_BY_DIET':\r\n            const allRecipes = state.allRecipes\r\n            const dietsAPI = []\r\n            const dietsDB = []\r\n            allRecipes.forEach(e => {\r\n                if (e.hasOwnProperty('diets') && e.diets.includes(action.payload)) {\r\n                    dietsAPI.push(e)\r\n                }\r\n            })\r\n\r\n            allRecipes.forEach(e => {\r\n                if (e.hasOwnProperty('diets') && e.diets.find(c => c.name === action.payload)) {\r\n                    dietsDB.push(e)\r\n                }\r\n            })\r\n            const find = dietsAPI.concat(dietsDB)\r\n            if (find.length) {\r\n                return {\r\n                    ...state,\r\n                    recipes: find\r\n                }\r\n            };\r\n            break;\r\n\r\n        case 'POST_RECIPE':\r\n            return {\r\n                ...state\r\n            }\r\n        // case 'GET_RECIPES':\r\n        //     return {\r\n        //         ...state,\r\n        //         recipes: action.payload\r\n        //     }\r\n        case 'FILTER_CREATED':\r\n            const createdFilter = action.payload === 'created' ? state.allRecipes.filter(el => el.createdInDB) : state.allRecipes.filter(el => !el.createdInDB)\r\n            return {\r\n                ...state,\r\n                recipes: action.payload === 'all' ? state.allRecipes : createdFilter\r\n            }\r\n        case \"GET_DETAIL\":\r\n            return {\r\n                ...state,\r\n                detail: action.payload,\r\n            }\r\n        case \"GET_RECIPE_TYPE\":\r\n            return {\r\n                ...state,\r\n                recipeTypes: action.payload,\r\n            }\r\n        case 'ORDER_BY_SCORE':\r\n            let sortedArr = action.payload === 'UP' ? state.recipes.sort(function (a, b) {\r\n                if (a.score > b.score) {\r\n                    return 1\r\n                }\r\n                if (b.score > a.score) {\r\n                    return -1\r\n                }\r\n                return 0\r\n            }) :\r\n                state.recipes.sort(function (a, b) {\r\n                    if (a.score > b.score) {\r\n                        return -1\r\n                    }\r\n                    if (b.score > a.score) {\r\n                        return 1\r\n                    }\r\n                    return 0\r\n                })\r\n            return {\r\n                ...state,\r\n                recipes: sortedArr\r\n            }\r\n        case 'FILTER_BY_ALPHA':\r\n            let alphaArr = action.payload === 'A-Z' ? state.allRecipes.sort(function (a, b) {\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                    return 1;\r\n                };\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                    return -1;\r\n                };\r\n                return 0;\r\n            }) :\r\n                state.allRecipes.sort(function (a, b) {\r\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                        return -1;\r\n                    };\r\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                        return 1;\r\n                    };\r\n                    return 0;\r\n                });\r\n            return {\r\n                ...state,\r\n                recipes: alphaArr\r\n            }*/\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
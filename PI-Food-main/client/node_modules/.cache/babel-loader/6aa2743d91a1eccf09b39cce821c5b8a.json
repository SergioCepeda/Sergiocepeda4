{"ast":null,"code":"import axios from 'axios';\nexport function getRecipes() {\n  return async function (dispatch) {\n    var json = await axios.get('http://localhost:3001/recipes');\n    console.log(json);\n    return dispatch({\n      type: 'GET_RECIPES',\n      payload: json.data\n    });\n  };\n}\nexport function getRecipeType() {\n  return async function (dispatch) {\n    var rTypes = await axios.get('http://localhost:3001/types');\n    return dispatch({\n      type: \"GET_RECIPE_TYPE\",\n      payload: rTypes.data\n    });\n  };\n}\nexport function postRecipe(payload) {\n  return async function (dispatch) {\n    var json = await axios.post('http://localhost:3001/recipe', payload);\n    console.log(json);\n    return json;\n  };\n}\nexport function getNameRecipes(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get('http://localhost:3001/recipes?name=' + name);\n      return dispatch({\n        type: 'GET_NAME_RECIPES',\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getDetail(ID) {\n  return async function (dispatch) {\n    try {\n      var detail = await axios.get('http://localhost:3001/recipes/' + ID);\n      return dispatch({\n        type: \"GET_DETAIL\",\n        payload: detail.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function orderByScore(payload) {\n  return {\n    type: 'ORDER_BY_SCORE',\n    payload\n  };\n}\nexport function filterRecipesByDiet(payload) {\n  return {\n    type: 'FILTER_BY_DIET',\n    payload\n  };\n}\nexport function orderByAlphabetics(payload) {\n  return {\n    type: 'FILTER_BY_ALPHA',\n    payload\n  };\n}\nexport function filterCreated(payload) {\n  return {\n    type: 'FILTER_CREATED',\n    payload\n  };\n}","map":{"version":3,"sources":["C:/Users/lacri/OneDrive/Desktop/food/PI-food-main/PI-food-main/PI-Food-main/client/src/actions/index.js"],"names":["axios","getRecipes","dispatch","json","get","console","log","type","payload","data","getRecipeType","rTypes","postRecipe","post","getNameRecipes","name","error","getDetail","ID","detail","orderByScore","filterRecipesByDiet","orderByAlphabetics","filterCreated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,GAAsB;AACzB,SAAO,gBAAgBC,QAAhB,EAA0B;AAC7B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,+BAAV,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOD,QAAQ,CAAC;AACZK,MAAAA,IAAI,EAAE,aADM;AAEZC,MAAAA,OAAO,EAAEL,IAAI,CAACM;AAFF,KAAD,CAAf;AAIH,GAPD;AAQH;AACD,OAAO,SAASC,aAAT,GAAwB;AAC3B,SAAO,gBAAgBR,QAAhB,EAAyB;AACxB,QAAIS,MAAM,GAAG,MAAMX,KAAK,CAACI,GAAN,CAAU,6BAAV,CAAnB;AACA,WAAOF,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,OAAO,EAAEG,MAAM,CAACF;AAFR,KAAD,CAAf;AAIP,GAND;AAOH;AAED,OAAO,SAASG,UAAT,CAAoBJ,OAApB,EAA6B;AAChC,SAAO,gBAAgBN,QAAhB,EAA0B;AAC7B,QAAIC,IAAI,GAAG,MAAMH,KAAK,CAACa,IAAN,CAAW,8BAAX,EAA2CL,OAA3C,CAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACH,GAJD;AAKH;AAED,OAAO,SAASW,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO,gBAAgBb,QAAhB,EAA0B;AAC7B,QAAI;AACA,UAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,wCAAwCW,IAAlD,CAAjB;AACA,aAAOb,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAE,kBADM;AAEZC,QAAAA,OAAO,EAAEL,IAAI,CAACM;AAFF,OAAD,CAAf;AAIH,KAND,CAOA,OAAOO,KAAP,EAAc;AACVX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH;AACJ,GAXD;AAYH;AAED,OAAO,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;AAC1B,SAAO,gBAAgBhB,QAAhB,EAA0B;AAC7B,QAAI;AACA,UAAIiB,MAAM,GAAG,MAAMnB,KAAK,CAACI,GAAN,CAAU,mCAAmCc,EAA7C,CAAnB;AACA,aAAOhB,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAE,YADM;AAEZC,QAAAA,OAAO,EAAEW,MAAM,CAACV;AAFJ,OAAD,CAAf;AAIH,KAND,CAME,OAAOO,KAAP,EAAc;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH;AACJ,GAVD;AAWH;AAED,OAAO,SAASI,YAAT,CAAsBZ,OAAtB,EAA+B;AAClC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASa,mBAAT,CAA6Bb,OAA7B,EAAsC;AACzC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASc,kBAAT,CAA4Bd,OAA5B,EAAqC;AACxC,SAAO;AACHD,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASe,aAAT,CAAuBf,OAAvB,EAAgC;AACnC,SAAO;AACHD,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import axios from 'axios';\r\n\r\nexport function getRecipes() {\r\n    return async function (dispatch) {\r\n        var json = await axios.get('http://localhost:3001/recipes');\r\n        console.log(json);\r\n        return dispatch({\r\n            type: 'GET_RECIPES',\r\n            payload: json.data\r\n        })\r\n    }\r\n}\r\nexport function getRecipeType(){\r\n    return async function (dispatch){\r\n            var rTypes = await axios.get('http://localhost:3001/types');\r\n            return dispatch({\r\n                    type: \"GET_RECIPE_TYPE\",\r\n                    payload: rTypes.data,\r\n            })\r\n    }\r\n}\r\n\r\nexport function postRecipe(payload) {\r\n    return async function (dispatch) {\r\n        var json = await axios.post('http://localhost:3001/recipe', payload);\r\n        console.log(json);\r\n        return json;\r\n    }\r\n}\r\n\r\nexport function getNameRecipes(name) {\r\n    return async function (dispatch) {\r\n        try {\r\n            var json = await axios.get('http://localhost:3001/recipes?name=' + name);\r\n            return dispatch({\r\n                type: 'GET_NAME_RECIPES',\r\n                payload: json.data\r\n            })\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDetail(ID) {\r\n    return async function (dispatch) {\r\n        try {\r\n            var detail = await axios.get('http://localhost:3001/recipes/' + ID);\r\n            return dispatch({\r\n                type: \"GET_DETAIL\",\r\n                payload: detail.data\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function orderByScore(payload) {\r\n    return {\r\n        type: 'ORDER_BY_SCORE',\r\n        payload\r\n    }\r\n}\r\n\r\nexport function filterRecipesByDiet(payload) {\r\n    return {\r\n        type: 'FILTER_BY_DIET',\r\n        payload\r\n    }\r\n}\r\n\r\nexport function orderByAlphabetics(payload) {\r\n    return {\r\n        type: 'FILTER_BY_ALPHA',\r\n        payload\r\n    }\r\n}\r\n\r\nexport function filterCreated(payload) {\r\n    return {\r\n        type: 'FILTER_CREATED',\r\n        payload\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
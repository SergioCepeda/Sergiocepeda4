{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lacri\\\\OneDrive\\\\Desktop\\\\food\\\\PI-food-main\\\\PI-food-main\\\\PI-Food-main\\\\client\\\\src\\\\components\\\\RecipeCreator.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { getRecipeType, postRecipe } from '../../actions/index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GoCheck } from \"react-icons/go\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeCreator = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const dietTypes = useSelector(state => state.dietTypes);\n  const history = useNavigate();\n  React.useEffect(() => {\n    dispatch(getRecipeType());\n  }, [dispatch]);\n  const [errors, setErrors] = React.useState({});\n  const [habilitado, setHabilitado] = React.useState(false);\n\n  const inputValidate = input => {\n    const errors = {};\n\n    if (!input.name) {\n      errors.name = \"Recipe's name is required!\";\n      setHabilitado(false);\n    }\n\n    if (!input.resume) {\n      errors.resume = \"Recipe's summary is required!\";\n      setHabilitado(false);\n    } else setHabilitado(true);\n\n    return errors;\n  };\n\n  const [input, setInput] = React.useState({\n    name: \"\",\n    resumePlate: \"\",\n    puntuation: 0,\n    healthyLevel: 0,\n    stepByStep: \"\",\n    diets: [],\n    image: \"\"\n  });\n\n  const typing = evt => {\n    evt.preventDefault();\n    setInput({ ...input,\n      [evt.target.name]: evt.target.value\n    });\n    setErrors(inputValidate({ ...input,\n      [evt.target.name]: evt.target.value\n    }));\n  };\n\n  const submiting = evt => {\n    evt.preventDefault();\n    dispatch(postRecipe(input));\n    alert(\"Recipe created succesfully!\");\n    setInput({\n      name: \"\",\n      resume: \"\",\n      score: 0,\n      healthyLevel: 0,\n      stepByStep: \"\",\n      image: \"\",\n      diets: []\n    });\n    history.push(\"/home\");\n  };\n\n  const selection = evt => {\n    setInput({ ...input,\n      diets: [...input.diets, evt.target.value]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/home\",\n      children: \"Get back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name of your recipe...*\",\n          value: input.name,\n          name: \"name\",\n          onChange: evt => {\n            typing(evt);\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Summary of your recipe...*\",\n          value: input.resumePlate,\n          name: \"resumePlate\",\n          onChange: evt => {\n            typing(evt);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), errors.resumePlate && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.resumePlate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Score 0/100: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"100\",\n          value: input.puntuation,\n          name: \"puntuation\",\n          onChange: evt => {\n            typing(evt);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [input.puntuation ? input.puntuation : 0, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Healthiness 0/100: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"100\",\n          value: input.healthyLevel,\n          name: \"healthyLevel\",\n          onChange: evt => {\n            typing(evt);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [input.healthyLevel ? input.healthyLevel : 0, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Step by step of your recipe...\",\n          value: input.stepByStep,\n          name: \"stepByStep\",\n          onChange: evt => {\n            typing(evt);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Image URL of your recipe...\",\n          type: \"text\",\n          value: input.image,\n          name: \"image\",\n          onChange: evt => {\n            typing(evt);\n          },\n          autocomplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Diet-Types: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"dietType\",\n          onChange: evt => {\n            selection(evt);\n          },\n          children: dietTypes && dietTypes.map(diet => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: diet.name,\n            children: diet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: input.diets && input.diets.map(diet => `// ${diet} //`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !habilitado,\n          onClick: evt => submiting(evt),\n          children: [\"CREATE \", /*#__PURE__*/_jsxDEV(GoCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeCreator, \"Sdxp89Cp4e7MpdBDtovYRpSJKnM=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n\n_c = RecipeCreator;\nexport default RecipeCreator; // import React,{useState, useEffect} from 'react';\n// import {Link,useNavigate } from 'react-router-dom';\n// import { getRecipeType, postRecipe } from '../actions';\n// import { useDispatch} from 'react-redux';\n// export default function RecipeCreator() {\n//     const dispatch = useDispatch()\n//     const history = useNavigate();\n//     const [err, setErr] = useState({});\n//      function validate(input) {\n//          let err = {};\n//          if (!input.name) {\n//              err.name = \"*Name must be filled*\";\n//          }\n//          if (!input.resume) {\n//              err.resume = \"*Resume must be filled*\";\n//          }\n//          return err;\n//      }\n//     const [input, setInput] = useState({\n//         name: '',\n//         resume: '',\n//         score: '',\n//         healthylevel: '',\n//         stepbystep: '',\n//         image: '',\n//         diets: []\n//     })\n//     useEffect(() => {\n//     dispatch(getRecipeType())\n//      }, [dispatch]);\n//      function handleChange(e) {\n//         setInput({\n//             ...input,\n//             [e.target.name]: e.target.value\n//         })\n//         setErr(validate({\n//             ...input,\n//             [e.target.name]: e.target.value,\n//     }))\n//     }\n//      function handleCheck(e) {\n//         if (e.target.checked) {\n//             setInput({\n//                 ...input,\n//                 diets: [...input.diets, e.target.value]\n//             })\n//         }\n//     }\n//     function handleSubmit(e) {\n//         e.preventDefault();\n//         dispatch(postRecipe(input))\n//         alert('Recipe successfully created')\n//         setInput({\n//             name: '',\n//             resume: '',\n//             score: '',\n//             healthylevel: '',\n//             stepbystep: '',\n//             image: '',\n//             diets: []\n//         })\n//         history.push('/home')\n//     }\n//     return (\n//         <div>\n//            <Link to= '/home'><button>Volver</button></Link>\n//            <h1>Crea tu receta</h1>\n//            <form onSubmit={(e) => handleSubmit(e)} >\n//                <div>\n//                    <label>Nombre</label>\n//                    <input\n//                        type='text'\n//                        value= {input.name}\n//                        name= 'name'\n//                        onChange={(e) => handleChange(e)}\n//                    />\n//                  <div/> \n//                    <div>\n//                        <label>Resumen</label>\n//                        <input\n//                            type='text'\n//                            value={input.resume}\n//                            name= 'resume'\n//                            onChange={(e) => handleChange(e)}\n//                        />\n//                    </div>\n//                    <div>\n//                        <label>Score</label>\n//                        <input \n//                         type='number'\n//                         value={input.score}\n//                         name='score'\n//                         onChange={(e) => handleChange(e)}\n//                          />\n//                    </div>\n//                    <div>\n//                        <label>HealthyLevel</label>\n//                        <input \n//                        type='range'\n//                        min=\"1\" max=\"100\"\n//                        value= {input.healthylevel}\n//                        name='Healthy Level'\n//                        onChange={(e) => handleChange(e)}\n//                          />\n//                            <span>{input.healthyLevel ? input.healthyLevel : 0} points</span>\n//                    </div>\n//                    <div>\n//                        <label>Instrucciones</label>\n//                        <input\n//                            type= 'text'\n//                            value={input.stepbystep}\n//                            name='stepbystep'\n//                            onChange={(e) => handleChange(e)}\n//                        />\n//                    </div>\n//                    <div>\n//                        <label>Imagen</label>\n//                        <input\n//                        type='text'\n//                        value= {input.image}\n//                        name='image'\n//                        onChange={(e) => handleChange(e)}\n//                         />\n//                    </div>\n//                    <div>\n//                        <label>Tipo de dieta</label>\n//                        <input\n//                         type='checkbox'\n//                         name='Dairy Free'\n//                         value='dairy free' \n//                         onChange={(e) => handleCheck(e)}\n//                        />\n//                        <label ><input\n//                         type='checkbox'\n//                         name='Gluten Free'\n//                         value='gluten free'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Gluten Free</label>\n//                     <label><input\n//                         type='checkbox'\n//                         name='Dairy Free'\n//                         value='dairy free'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Dairy Free</label>\n//                      <label><input\n//                         type='checkbox'\n//                         name='Lacto Ovo Vegetarian'\n//                         value='lacto ovo vegetarian'\n//                         onChange={(e) => handleCheck(e)}\n//                     /> Lacto Ovo V</label>\n//                     <label ><input\n//                         type='checkbox'\n//                         name='Vegan'\n//                         value='vegan'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Vegan</label>\n//                      <label><input\n//                         type='checkbox'\n//                         name='Paleolithic'\n//                         value='paleolithic'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Paleolithic</label>\n//                     <label ><input\n//                         type='checkbox'\n//                         name='Primal'\n//                         value='primal'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Primal</label>\n//                     <label ><input\n//                         type='checkbox'\n//                         name='Pescatarian'\n//                         value='pescatarian'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Pescatarian</label>\n//                     <label ><input\n//                         type='checkbox'\n//                         name='Fodmap Friendly'\n//                         value='fodmap friendly'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Fodmap Friendly</label>\n//                      <label><input\n//                         type='checkbox'\n//                         name='Whole 30'\n//                         value='whole 30'\n//                         onChange={(e) => handleCheck(e)}\n//                     />Whole 30</label>\n//                    </div>\n//                </div>\n//                <button  type='submit'>Crea tu receta</button>\n//            </form>\n//         </div>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeCreator\");","map":{"version":3,"sources":["C:/Users/lacri/OneDrive/Desktop/food/PI-food-main/PI-food-main/PI-Food-main/client/src/components/RecipeCreator.jsx"],"names":["React","NavLink","useNavigate","getRecipeType","postRecipe","useDispatch","useSelector","GoCheck","RecipeCreator","dispatch","dietTypes","state","history","useEffect","errors","setErrors","useState","habilitado","setHabilitado","inputValidate","input","name","resume","setInput","resumePlate","puntuation","healthyLevel","stepByStep","diets","image","typing","evt","preventDefault","target","value","submiting","alert","score","push","selection","map","diet"],"mappings":"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":["import React from 'react';\r\nimport { NavLink, useNavigate} from 'react-router-dom';\r\nimport { getRecipeType, postRecipe  } from '../../actions/index';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GoCheck } from \"react-icons/go\";\r\n\r\n\r\nconst RecipeCreator =()=> {\r\n\r\n    const dispatch = useDispatch();\r\n    const dietTypes = useSelector(state => state.dietTypes);\r\n    const history =useNavigate();\r\n\r\n    React.useEffect(()=>{ dispatch(getRecipeType()) }, [dispatch]);\r\n\r\n    const [errors, setErrors] = React.useState({});\r\n    const [habilitado, setHabilitado] = React.useState(false);\r\n\r\n    const inputValidate = input => {\r\n        const errors = {};\r\n    \r\n        if (!input.name) {\r\n            errors.name = \"Recipe's name is required!\";\r\n            setHabilitado(false)\r\n        }\r\n        if (!input.resume) {\r\n            errors.resume = \"Recipe's summary is required!\";\r\n            setHabilitado(false)\r\n        }\r\n        else setHabilitado(true);\r\n    \r\n        return errors;\r\n    };\r\n\r\n    const [input, setInput] = React.useState({\r\n        name: \"\", \r\n        resumePlate: \"\", \r\n        puntuation: 0, \r\n        healthyLevel: 0, \r\n        stepByStep: \"\", \r\n        diets: [],\r\n        image: \"\"\r\n    });\r\n\r\n    const typing = evt => {\r\n        evt.preventDefault();\r\n        setInput({\r\n            ...input,\r\n            [ evt.target.name ] : evt.target.value\r\n        });\r\n        setErrors(inputValidate({\r\n            ...input,\r\n            [ evt.target.name ] : evt.target.value\r\n        }))\r\n    };\r\n\r\n    const submiting = evt => {\r\n        evt.preventDefault();\r\n        dispatch(postRecipe(input));\r\n        alert(\"Recipe created succesfully!\");\r\n        setInput({\r\n            name: \"\", \r\n            resume: \"\", \r\n            score: 0, \r\n            healthyLevel: 0, \r\n            stepByStep: \"\", \r\n            image: \"\",\r\n            diets: [],\r\n        });\r\n        history.push(\"/home\");\r\n    };\r\n\r\n    const selection = evt => {\r\n        setInput({\r\n            ...input,\r\n            diets: [...input.diets, evt.target.value]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <NavLink to=\"/home\" >Get back</NavLink>\r\n\r\n            <form>\r\n                <div>\r\n                    <input \r\n                    placeholder=\"Name of your recipe...*\" \r\n                    value={input.name} \r\n                    name=\"name\"\r\n                    onChange={evt =>{ typing(evt) }}\r\n                    autoComplete=\"off\" \r\n                     />\r\n                    { errors.name && ( <div >{errors.name}</div> ) }\r\n                </div>\r\n                <div>\r\n                    <textarea \r\n                    placeholder=\"Summary of your recipe...*\" \r\n                    value={input.resumePlate} \r\n                    name=\"resumePlate\"\r\n                    onChange={evt =>{ typing(evt) }}\r\n                     />\r\n                     { errors.resumePlate && ( <div >{errors.resumePlate}</div> ) }\r\n                </div>\r\n                <div>\r\n                    <label>Score 0/100: </label>\r\n                    <input \r\n                    type=\"range\" \r\n                    min=\"1\" max=\"100\" \r\n                    value={input.puntuation} \r\n                    name=\"puntuation\" \r\n                    onChange={evt =>{ typing(evt) }}\r\n                    />\r\n                    <span>{input.puntuation ? input.puntuation : 0} points</span>\r\n                </div>\r\n                <div>\r\n                    <label>Healthiness 0/100: </label>\r\n                    <input \r\n                    type=\"range\" \r\n                    min=\"1\" max=\"100\" \r\n                    value={input.healthyLevel} \r\n                    name=\"healthyLevel\" \r\n                    onChange={evt =>{ typing(evt) }}\r\n                    />\r\n                     <span>{input.healthyLevel ? input.healthyLevel : 0} points</span>\r\n                </div>\r\n                <div>\r\n                    <textarea \r\n                    placeholder=\"Step by step of your recipe...\" \r\n                    value={input.stepByStep} \r\n                    name=\"stepByStep\"\r\n                    onChange={evt =>{ typing(evt) }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input \r\n                    placeholder=\"Image URL of your recipe...\" \r\n                    type=\"text\" \r\n                    value={input.image} \r\n                    name=\"image\"\r\n                    onChange={evt =>{ typing(evt) }}\r\n                    autocomplete=\"off\" \r\n                   />\r\n                </div>\r\n                <div>\r\n                    <label>Diet-Types: </label>\r\n                    <select name=\"dietType\" onChange={evt =>{ selection(evt) }} >\r\n                        { dietTypes && dietTypes.map(diet => (\r\n                            <option value = { diet.name }>{ diet.name }</option> ))\r\n                        }\r\n                    </select>\r\n                </div> \r\n                <ul ><li>{input.diets && input.diets.map(diet => `// ${diet} //`)}</li></ul>\r\n                <div>\r\n                    {<button \r\n                    type=\"submit\" \r\n                    disabled={!habilitado} \r\n                    onClick={evt => submiting(evt)} \r\n                    \r\n                    >CREATE <GoCheck/></button>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecipeCreator;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React,{useState, useEffect} from 'react';\r\n// import {Link,useNavigate } from 'react-router-dom';\r\n// import { getRecipeType, postRecipe } from '../actions';\r\n// import { useDispatch} from 'react-redux';\r\n\r\n// export default function RecipeCreator() {\r\n//     const dispatch = useDispatch()\r\n  \r\n//     const history = useNavigate();\r\n//     const [err, setErr] = useState({});\r\n\r\n\r\n   \r\n\r\n//      function validate(input) {\r\n//          let err = {};\r\n//          if (!input.name) {\r\n//              err.name = \"*Name must be filled*\";\r\n//          }\r\n//          if (!input.resume) {\r\n//              err.resume = \"*Resume must be filled*\";\r\n//          }\r\n//          return err;\r\n//      }\r\n\r\n\r\n\r\n \r\n//     const [input, setInput] = useState({\r\n//         name: '',\r\n//         resume: '',\r\n//         score: '',\r\n//         healthylevel: '',\r\n//         stepbystep: '',\r\n//         image: '',\r\n//         diets: []\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//     dispatch(getRecipeType())\r\n//      }, [dispatch]);\r\n\r\n\r\n//      function handleChange(e) {\r\n//         setInput({\r\n//             ...input,\r\n//             [e.target.name]: e.target.value\r\n//         })\r\n//         setErr(validate({\r\n//             ...input,\r\n//             [e.target.name]: e.target.value,\r\n//     }))\r\n    \r\n//     }\r\n\r\n\r\n\r\n//      function handleCheck(e) {\r\n//         if (e.target.checked) {\r\n//             setInput({\r\n//                 ...input,\r\n//                 diets: [...input.diets, e.target.value]\r\n//             })\r\n//         }\r\n//     }\r\n    \r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n//         dispatch(postRecipe(input))\r\n//         alert('Recipe successfully created')\r\n//         setInput({\r\n//             name: '',\r\n//             resume: '',\r\n//             score: '',\r\n//             healthylevel: '',\r\n//             stepbystep: '',\r\n//             image: '',\r\n//             diets: []\r\n//         })\r\n//         history.push('/home')\r\n//     }\r\n\r\n\r\n\r\n    \r\n//     return (\r\n//         <div>\r\n//            <Link to= '/home'><button>Volver</button></Link>\r\n//            <h1>Crea tu receta</h1>\r\n//            <form onSubmit={(e) => handleSubmit(e)} >\r\n//                <div>\r\n//                    <label>Nombre</label>\r\n//                    <input\r\n//                        type='text'\r\n//                        value= {input.name}\r\n//                        name= 'name'\r\n//                        onChange={(e) => handleChange(e)}\r\n//                    />\r\n//                  <div/> \r\n\r\n//                    <div>\r\n//                        <label>Resumen</label>\r\n//                        <input\r\n//                            type='text'\r\n//                            value={input.resume}\r\n//                            name= 'resume'\r\n//                            onChange={(e) => handleChange(e)}\r\n//                        />\r\n//                    </div>\r\n\r\n//                    <div>\r\n//                        <label>Score</label>\r\n//                        <input \r\n//                         type='number'\r\n//                         value={input.score}\r\n//                         name='score'\r\n//                         onChange={(e) => handleChange(e)}\r\n//                          />\r\n//                    </div>\r\n\r\n//                    <div>\r\n//                        <label>HealthyLevel</label>\r\n//                        <input \r\n//                        type='range'\r\n//                        min=\"1\" max=\"100\"\r\n//                        value= {input.healthylevel}\r\n//                        name='Healthy Level'\r\n//                        onChange={(e) => handleChange(e)}\r\n                       \r\n//                          />\r\n//                            <span>{input.healthyLevel ? input.healthyLevel : 0} points</span>\r\n//                    </div>\r\n\r\n//                    <div>\r\n//                        <label>Instrucciones</label>\r\n//                        <input\r\n//                            type= 'text'\r\n//                            value={input.stepbystep}\r\n//                            name='stepbystep'\r\n//                            onChange={(e) => handleChange(e)}\r\n//                        />\r\n//                    </div>\r\n\r\n//                    <div>\r\n//                        <label>Imagen</label>\r\n//                        <input\r\n//                        type='text'\r\n//                        value= {input.image}\r\n//                        name='image'\r\n//                        onChange={(e) => handleChange(e)}\r\n//                         />\r\n//                    </div>\r\n\r\n//                    <div>\r\n//                        <label>Tipo de dieta</label>\r\n//                        <input\r\n//                         type='checkbox'\r\n//                         name='Dairy Free'\r\n//                         value='dairy free' \r\n//                         onChange={(e) => handleCheck(e)}\r\n//                        />\r\n//                        <label ><input\r\n//                         type='checkbox'\r\n//                         name='Gluten Free'\r\n//                         value='gluten free'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Gluten Free</label>\r\n//                     <label><input\r\n//                         type='checkbox'\r\n//                         name='Dairy Free'\r\n//                         value='dairy free'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Dairy Free</label>\r\n//                      <label><input\r\n//                         type='checkbox'\r\n//                         name='Lacto Ovo Vegetarian'\r\n//                         value='lacto ovo vegetarian'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     /> Lacto Ovo V</label>\r\n//                     <label ><input\r\n//                         type='checkbox'\r\n//                         name='Vegan'\r\n//                         value='vegan'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Vegan</label>\r\n\r\n//                      <label><input\r\n//                         type='checkbox'\r\n//                         name='Paleolithic'\r\n//                         value='paleolithic'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Paleolithic</label>\r\n//                     <label ><input\r\n//                         type='checkbox'\r\n//                         name='Primal'\r\n//                         value='primal'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Primal</label>\r\n//                     <label ><input\r\n//                         type='checkbox'\r\n//                         name='Pescatarian'\r\n//                         value='pescatarian'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Pescatarian</label>\r\n//                     <label ><input\r\n//                         type='checkbox'\r\n//                         name='Fodmap Friendly'\r\n//                         value='fodmap friendly'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Fodmap Friendly</label>\r\n//                      <label><input\r\n//                         type='checkbox'\r\n//                         name='Whole 30'\r\n//                         value='whole 30'\r\n//                         onChange={(e) => handleCheck(e)}\r\n//                     />Whole 30</label>\r\n                     \r\n\r\n\r\n                    \r\n//                    </div>\r\n\r\n\r\n\r\n//                </div>\r\n\r\n//                <button  type='submit'>Crea tu receta</button>\r\n\r\n//            </form>\r\n//         </div>\r\n//     )\r\n\r\n\r\n// }"]},"metadata":{},"sourceType":"module"}
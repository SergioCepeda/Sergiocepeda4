{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lacri\\\\OneDrive\\\\Desktop\\\\food\\\\PI-food-main\\\\PI-food-main\\\\PI-Food-main\\\\client\\\\src\\\\components\\\\Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getDetail } from '../actions/index';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Detail(props) {\n  _s();\n\n  var _recipe$0$stepbystep;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDetail(props.match.params.id));\n  }, [dispatch, props.match.params.id]);\n  const recipe = useSelector(state => state.detail);\n  console.log(recipe);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [recipe.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: recipe[0].image,\n        alt: \"\",\n        width: \"200px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Resume: \", recipe[0].resume.replace(/<[^>]*>?/g, '')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Diet Type: \", recipe[0].diets && recipe[0].diets.length ? recipe[0].diets.map(diet => ` ${diet}. `) : recipe[0].diets ? \" No diet-type specified for this recipe, sorry...\" : recipe[0].DietTypes && recipe[0].DietTypes.length ? recipe[0].DietTypes.map(diet => ` ${diet.name}. `) : \" No diet-type specified for this recipe, sorry...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Score: \", recipe[0].score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Healthy level: \", recipe[0].healthylevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Step by step: \", !recipe[0].createdInDB ? (_recipe$0$stepbystep = recipe[0].stepbystep) === null || _recipe$0$stepbystep === void 0 ? void 0 : _recipe$0$stepbystep.map(step => step) : recipe[0].stepbystep]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Back to home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Detail, \"4Rv3IJDURnvV41IUeAE5hhia6zo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["C:/Users/lacri/OneDrive/Desktop/food/PI-food-main/PI-food-main/PI-Food-main/client/src/components/Detail.jsx"],"names":["React","useEffect","Link","getDetail","useDispatch","useSelector","Detail","props","dispatch","match","params","id","recipe","state","detail","console","log","length","name","image","resume","replace","diets","map","diet","DietTypes","score","healthylevel","createdInDB","stepbystep","step"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { getDetail } from '../actions/index'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nexport default function Detail(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetail(props.match.params.id))\r\n    }, [dispatch, props.match.params.id])\r\n\r\n    const recipe = useSelector((state) => state.detail);\r\n    console.log(recipe)\r\n    return (\r\n        <div>\r\n            {\r\n                recipe.length > 0 ?\r\n                    <div>\r\n                        <h1>{recipe[0].name}</h1>\r\n                        <img  src={recipe[0].image} alt=\"\" width=\"200px\" height=\"200px\" />\r\n                        <p ><h5>Resume: {recipe[0].resume.replace(/<[^>]*>?/g, '')}</h5></p>\r\n                        <h5 >Diet Type: {\r\n                                 recipe[0].diets && recipe[0].diets.length \r\n                                 ? \r\n                                 recipe[0].diets.map(diet => ` ${diet}. `) \r\n                                 : \r\n                                 recipe[0].diets \r\n                                 ? \r\n                                 \" No diet-type specified for this recipe, sorry...\" \r\n                                 :\r\n                                 recipe[0].DietTypes && recipe[0].DietTypes.length \r\n                                 ? \r\n                                 recipe[0].DietTypes.map(diet => ` ${diet.name}. `) \r\n                                 :\r\n                                 \" No diet-type specified for this recipe, sorry...\"\r\n                            }</h5>\r\n                        <h5>Score: {recipe[0].score}</h5>\r\n                        <h5 >Healthy level: {recipe[0].healthylevel}</h5>\r\n                        <p >Step by step: {!recipe[0].createdInDB ? recipe[0].stepbystep?.map((step) => step) : recipe[0].stepbystep}</p>\r\n                    </div> : <p>Loading....</p>\r\n            }\r\n            <Link to='/home'>\r\n                <button>Back to home</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}